import {Entity, EntitySubscriberInterface, EventSubscriber, TableInheritance, ChildEntity} from "typeorm";
<%- include('partial/class/import', {entity: entity}) -%>

/**
* <%- (entity.description || `${entity.namePascal} description`).replace(/\n/g, '\n* ') %>.
 */
<% if(entity.generalizationLinksFrom.length) {%>
@TableInheritance({ column: { type: "varchar", name: "generalizationEntityType" } })<% } %><% if(entity.generalizationLinksTo) { %>
@ChildEntity()<% } else { %>
@Entity()<% } %>
export class <%= entity.namePascal %> <%- include('partial/class/extend', {entity: entity}) -%> {
  constructor(params?: <%= entity.namePascal %>Contract) {
    <% if(entity.generalizationLinksTo) { %>super();<%}%>
    params && Object.assign(this, params);
  }
  <%- include('partial/class/attributes', {entity: entity, orm: true}) -%>
  <%- include('partial/class/links', {entity: entity}) -%>

  <%- include('partial/class/operations', {entity: entity}) -%>
}

@EventSubscriber()
export class <%= entity.namePascal %>Subscriber implements EntitySubscriberInterface<<%= entity.namePascal %>> {
    listenTo() { return <%= entity.namePascal %>; }
}
