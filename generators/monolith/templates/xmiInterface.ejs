import {Promise} from 'es6-promise';

<% entity.referencesAsList.forEach(reference => {%>
  import {<%= reference.name %>} from '<%= reference.path.substr(3) %>';
<% }) %>

/**
 * This file is auto-generated. Do not update it's content!
 */
export interface <%= entity.name %>Contract {
  <% (entity.attributes || []).forEach(function (attr) { %>
    /**
    * <%= attr.name %> property
    */
    <%= attr.name %>: <%= attr.typeRef ? attr.typeRef.name + 'Contract' : attr.type %>;
  <% }) %>

  <% (entity.operations || []).forEach(function (operation) { %>
    /**
    * <%= operation.name %> description.
    */
    <%= operation.name %>(state: any): Promise<any>;
  <% }) %>

  <% if(entity.hasLoop) { %>
    //#region Loop
    /**
    * Loop condition.
    */
    loopCondition: boolean;

    /**
    * Get loop delay in ms.
    */
    loopDelay: number;
    //#endregion
  <% } %>

  //# region Message conditions
  <% Object.keys(entity.conditions).forEach(x => entity.conditions[x].forEach(y => { %>
    '<%- y %>'(state: any): boolean;
  <% })) %>
  //# endregion
  }
