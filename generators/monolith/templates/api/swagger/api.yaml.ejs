swagger: "2.0"
info:
  version: 1.0.0
  title: api
  description: REST API
basePath: /api/v1
tags:
  - name: Examples
    description: Simple example endpoints
  - name: Specification
    description: The swagger API specification

consumes:
  - application/json
produces:
  - application/json

paths:

<% classes.forEach((x) => { %>
  <%= x.url %>/<%= x.entity.name %>:
    get:
      tags:
      - "Entities: <%= x.entity.namePascal %>"
      description: <%= x.entity.namePascal %>

      responses:
        200:
          description: Get all <%= x.entity.name %>

    post:
      tags:
      - "Entities: <%= x.entity.namePascal %>"
      description: <%= x.entity.namePascal %>

      parameters:
      - in: "body"
        name: "body"
        description: "<%= x.entity.namePascal %> object to be added"
        required: true
        schema:
          $ref: "#/definitions/<%= x.entity.namePascal %>"

      responses:
        200:
          description: Create <%= x.entity.name %>

  <%= x.url %>/<%= x.entity.name %>/{id}:
    get:
      tags:
      - "Entities: <%= x.entity.namePascal %>"
      description: <%= x.entity.name %>

      parameters:
      - in: "path"
        name: "id"
        description: "<%= x.entity.name %> id to delete"
        required: true
        type: "string"

      responses:
        200:
          description: Get <%= x.entity.nameOrigin %> by id
    put:
      tags:
      - "Entities: <%= x.entity.namePascal %>"
      description: <%= x.entity.name %>

      parameters:
      - in: "path"
        name: "id"
        description: "<%= x.entity.name %> id to delete"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "<%= x.entity.name %> object to be added"
        required: true
        schema:
          $ref: "#/definitions/<%= x.entity.namePascal %>"

      responses:
        200:
          description: Update <%= x.entity.name %> by id

    delete:
      tags:
      - "Entities: <%= x.entity.namePascal %>"
      description: <%= x.entity.name %>

      parameters:
      - in: "path"
        name: "id"
        description: "<%= x.entity.name %> id to delete"
        required: true
        type: "string"

      responses:
        200:
          description: Delete <%= x.entity.name %> by id
<% }) %>

<% diagrams.forEach((x) => { %>
  <%= x.url %>:
    post:
      tags:
        - "Process: <%= x.entity.namePascal %>"
      description: <%= x.entity.name %>

      parameters:
      - in: body
        name: body
        required: false
        schema:
          type: object

      responses:
        200:
          description: Returns execution result
<% }) %>

definitions:
<% classes.forEach((x) => { %>
  <%= x.entity.namePascal %>:
    type: "object"
  <% if(x.entity.generalizationLinksTo) { %>
    allOf:
    - $ref: "#/definitions/<%= x.entity.generalizationLinksTo.namePascal %>"
  <% } %>
    properties:
  <% (x.entity.attributesCombined || []).filter(x => x.name && !x.isArray).forEach((attr) => { %>
      <% if(attr.typeRef) { %>
        <%= attr.name %>Id:
          type: "string"
      <% } else { %>
        <%= attr.name %>:
          type: "<%= attr.type === 'Date' ? 'number' : attr.type %>"
      <% } %>
  <% }) %>
<% }) %>
