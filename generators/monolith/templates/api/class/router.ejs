import express from 'express';
import {Request, Response} from "express";
import {getRepository} from "typeorm";
import {<%= entity.name %>} from '../../<%= entity.getRelativeRoot() %>/design/<%= entity.pathFromRoot %>/components/<%= entity.name %>';

export default express.Router()
    /**
     * Request all entities.
     */
    .get("/<%= entity.name %>", async (req: Request, res: Response) => {
        return getRepository(<%= entity.name %>).find();
    })

    /**
     * Request entity by id.
     */
    .get("/<%= entity.name %>/:id", async (req: Request, res: Response) => {
        return getRepository(<%= entity.name %>).findOne(req.params.id);
    })

    /**
     * Create new entity.
     */
    .post("/<%= entity.name %>", async (req: Request, res: Response) => {
        const repository = getRepository(<%= entity.name %>);
        const entity = repository.create(req.body);
        return repository.save(entity);
    })

    /**
     * Update existing entity.
     */
    .put("/<%= entity.name %>/:id", async (req: Request, res: Response) => {
        const repository = getRepository(<%= entity.name %>);
        const entity = await repository.findOne(req.params.id);

        if(entity) {
            repository.merge(entity, req.body);
            return repository.save(entity);
        }
    })

    /**
     * Delete entity.
     */
    .delete("/<%= entity.name %>/:id", async (req: Request, res: Response) => {
        return getRepository(<%= entity.name %>).remove(req.params.id);
    });
