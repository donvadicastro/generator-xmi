import {Entity, ObjectIdColumn, OneToMany} from "typeorm";
import {Column} from "typeorm/decorator/columns/Column";
import {OneToOne} from "typeorm/decorator/relations/OneToOne";
import {JoinColumn} from "typeorm/decorator/relations/JoinColumn";

import {ComponentBase} from '../<%= entity.getRelativeRoot() %>/base/componentBase';
import {<%= entity.name %>Contract} from '../../contracts/<%= entity.name %>';

<% if(entity.generalizationLinksTo) { %>
    import {<%= entity.generalizationLinksTo.name %>Base} from '../<%= entity.getRelativePath(entity.generalizationLinksTo) %>/components/generated/<%= entity.generalizationLinksTo.name %>.generated';
<% } %>

<% (entity.provided || []).forEach(function (value) { %>
    <% if(value.name) { %>
        import {<%= value.name %>Contract} from '../<%= entity.getRelativePath(value.ref) %>/contracts/<%= value.name %>';

        <% (value.ref.attributes || []).filter(x => x.typeRef).forEach(function (attribute) { %>
            import {<%= attribute.typeRef.name %>Contract} from '../<%= entity.getRelativePath(attribute.typeRef) %>/contracts/<%= attribute.typeRef.name %>';
        <% }) %>
<%}})%>

<% (entity.required || []).forEach(function (value) { %>
    import {<%= value.name %>Contract} from '../<%= entity.getRelativePath(value.ref) %>/contracts/<%= value.name %>';
<%})%>

<%# Inject base interface when instance speciaification is used %>
<% (entity.associationLinks || []).forEach(x => { %>
    import {<%= x.typeRef.name %>Contract} from '../<%= entity.getRelativePath(x.typeRef) %>/contracts/<%= x.typeRef.name %>';
    import {<%= x.typeRef.name %>Base} from '../<%= entity.getRelativePath(x.typeRef) %>/components/generated/<%= x.typeRef.name %>.generated';
<% }) %>

<% (entity.aggregationLinks || []).forEach(x => { %>
    import {<%= x.typeRef.name %>Contract} from '../<%= entity.getRelativePath(x.typeRef) %>/contracts/<%= x.typeRef.name %>';
    import {<%= x.typeRef.name %>Base} from '../<%= entity.getRelativePath(x.typeRef) %>/components/generated/<%= x.typeRef.name %>.generated';
<% }) %>


<%# Inject base class when instance speciaification is used %>
<% if (entity.elementRef) { %>
    import {<%= entity.elementRef.name %>} from '../<%= entity.getRelativePath(entity.elementRef) %>/components/<%= entity.elementRef.name %>';
<%}%>

import {Promise} from 'es6-promise';
