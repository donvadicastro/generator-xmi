@ObjectIdColumn()
id: number = 0;

<% (entity.attributes || []).forEach(function (attr) { %>
    /**
    * <%= attr.name %> property
    */
    @Column()
    <%= attr.name %>: <%= attr.typeRef ? attr.typeRef.name + 'Contract' : attr.type %> = <%- attr.typeDefaultValue %>;
<% }) %>

<% (entity.associationLinks || []).forEach(x => { %>
    /**
    * <%= x.typeRef.name %> associated reference.
    */
    <% if(!x.multiplicity || x.multiplicity === '1' || x.multiplicity === '0..1') { %>
        @OneToOne(type => <%= x.typeRef.name %>Base)
        <%= x.typeRef.name %>Ref?: <%= x.typeRef.name %>Contract;

        @Column()
        <%= x.typeRef.name %>RefId?: string;
    <%} else {%>
        @OneToMany(type => <%= x.typeRef.name %>Base, <%= x.typeRef.name %> => <%= x.typeRef.name %>.<%= entity.name %>Ref)
        <%= x.typeRef.name %>RefList?: <%= x.typeRef.name %>Contract[];
<% }}) %>

<% (entity.aggregationLinks || []).forEach(x => { %>
    /**
    * <%= x.typeRef.name %> aggregation reference.
    */
    <% if(!x.multiplicity || x.multiplicity === '1' || x.multiplicity === '0..1') { %>
        @OneToOne(type => <%= x.typeRef.name %>Base)
        <%= x.typeRef.name %>Ref?: <%= x.typeRef.name %>Contract;
    <%} else {%>
        @OneToMany(type => <%= x.typeRef.name %>Base, <%= x.typeRef.name %> => <%= x.typeRef.name %>.<%= entity.name %>Ref)
        <%= x.typeRef.name %>RefList?: <%= x.typeRef.name %>Contract[];
<% }}) %>
