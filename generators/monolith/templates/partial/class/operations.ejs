<% (entity.operations || []).forEach(function (operation) { %>
    /**
    * <%- (operation.description || `${operation.name} description`).replace(/\n/g, '\n* ') %>.
    */
    async <%= operation.name %>(state: FlowStateType & {
            <% operation.inputParameters.forEach(x => { %>
                <%= x.name %>: <%= x.typeRef ? `${x.typeRef.name}Base${x.isArray ? '[]' : ''}` : x.type %>,
            <% }) %>
        }, returns?: any): Promise<FlowStateType & {returns: <%= operation.returnParameter.typeRef ? `${operation.returnParameter.typeRef.name}Base` : operation.returnParameter.type %><%= operation.isReturnArray ? '[]' : '' %> | null}> {

        this.notifyComplete('<%= entity.name %>::<%= operation.name %>', state.start);
        return {...<FlowStateType>state, ...{returns: returns}};
    }
<% }) %>
