package com.generator.design.<%= entity.getPathFromRoot(utils.self, '.') %>.contracts;

<%- include('partial/common/importReferences', {entity: entity, deepLevel: ''}) -%>
import java.util.Collections;
import java.util.Date;
import java.util.List;

<%- include('partial/common/classDescription', {entity: entity, system: true}) -%>

public interface <%= entity.namePascal %> {
  <% [...entity.associationLinks || [], ...entity.aggregationLinks || []].forEach(x => { %>
    <% if(!x.target.multiplicity || x.target.multiplicity === '1' || x.target.multiplicity === '0..1') { %>
        /**
        *  <%= x.target.typeRef.name %> reference
        */
        <%= x.target.typeRef.namePascal %> <%= x.target.typeRef.name %>Ref;
    <%} else {%>
      /**
      *  <%= x.target.typeRef.name %> reference
      */
      <%= x.target.typeRef.namePascal %>[] <%= x.target.typeRef.name %>RefList;
  <% }}) %>

  <% (entity.operations || []).forEach(function (operation) { %>
    /**
    * <%= operation.name %> description.
    */
    <%- include('partial/interface/operation', {operation: operation}) -%>;
  <% }) %>
  }
