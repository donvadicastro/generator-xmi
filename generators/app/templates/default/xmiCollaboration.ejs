import {Promise} from 'es6-promise';

<% (entity.lifelines || []).forEach(function (lifeline, index) { %>
    import {<%= lifeline.elementRef.name %>Contract} from '<%= entity.getRelativePath(lifeline.elementRef) %>/contracts/<%= lifeline.elementRef.name %>';
<% }) %>


export class <%= entity.name %> {
    constructor(
        <% (entity.lifelines || []).forEach(function (lifeline, index) { %>
        /**
        * <%= lifeline.elementRef.name %> component
        */
        private cmp<%= lifeline.elementRef.name %>:  <%= lifeline.elementRef.name %>Contract,
        <% }) %>
    ) {}

    /**
    /* Execute process
    */
    run(inputState) {
        return Promise.resolve(inputState)
            <% (entity.messages || []).forEach(function (message) { %>
            // <%= message.from ? message.from.elementRef.name : 'Start' %> call <%= message.to.elementRef.name %>
            .then((state) => {
                state.start = new Date();
                console.log('--> <%= message.to.elementRef.name %>::<%= message.operation.name %>');

                return this.cmp<%= message.to.elementRef.name %>.<%= message.operation.name %>(state);
            })
            <% }) %>
        ;
    }
}
