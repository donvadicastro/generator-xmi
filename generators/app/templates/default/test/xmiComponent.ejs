import {<%= entity.name %>} from '../process/<%= entity.name %>';

<%
    var imports = [];

    (entity.lifelines || []).forEach(function (lifeline, index) {
        imports.push(lifeline.elementRef);

        (lifeline.elementRef.required || []).map(x => factory.resolveDependency(x.ref.name)).forEach(value => {
            imports.push(value);
        })
    });
%>

<% imports.filter((x, i, arr) => arr.indexOf(x) === i).forEach(x => { %>
    import {<%= x.name %>} from '<%= entity.getRelativePath(x) %>/components/<%= x.name %>';
<% }) %>

const process = new <%= entity.name %>(<% (entity.lifelines || []).forEach(function (lifeline) { %>
    new <%= lifeline.name %>(
        <% (lifeline.elementRef.required || []).map(function (value, i, list) { %>
            new <%= factory.resolveDependency(value.ref.name).name %>(),
        <% }) %>
    ),
<% }) %>);

process.run(0).then(ret => console.log(ret));