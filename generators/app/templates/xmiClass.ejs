<%
  var impl = provided || [];
%>

import {<%= name %>Contract} from '../contracts/<%= name %>';

<% impl.forEach(function (value) { %>
<% if(value.name) { %>
import {<%= value.name %>Contract} from '<%= path.map(function() { return '..'; }).join('/') %>/<%= value.ref.path.slice(0, value.path.length - 1).reverse().map(function(a) { return a.name; }).join('/') %>/contracts/<%= value.name %>';
<%}})%>

<% (required || []).forEach(function (value) { %>
import {<%= value.name %>Contract} from '<%= path.map(function() { return '..'; }).join('/') %>/<%= value.ref.path.slice(0, value.path.length - 1).reverse().map(function(a) { return a.name; }).join('/') %>/contracts/<%= value.name %>';
<%})%>


import {Promise} from 'es6-promise';

export class <%= name %> implements <%= name %>Contract <% if (impl.length) { %>, <%}%><%= impl.map(function(x) { return x.name + 'Contract' }).join(', ') %> {
  <% (attributes || []).forEach(function (attr) { %>
  /**
  * <%= attr.name %> property
  */
  <%= attr.name %>;
  <% }) %>

  constructor(
  <% (required || []).map(function (value, i, list) { %>
    <%= value.ref.name %>: <%= value.ref.name %>Contract <% if(i < list.length) { %>,<% } %>
  <% }) %>) {
    //constructor
  }

  <% (operations || []).forEach(function (operation) { %>
  /**
  * <%= operation.name %> description.
  */
  <%= operation.name %>(state: any): Promise<any> {
    return new Promise((resolve, reject) => {
      reject(new Error('Not implemented'));
    });
  }
  <% }) %>

  <% impl.forEach(function (value) { %>
    //#region <%= value.name %>Contract implementation

    <% (value.ref.operations || []).forEach(function (operation) { %>
    /**
    * <%= operation.name %> description.
    */
    <%= operation.name %>(state: any): Promise<any> {
      return new Promise((resolve, reject) => {
        reject(new Error('Not implemented'));
      });
    }
    <% }) %>

    //#endregion
  <%})%>
}
